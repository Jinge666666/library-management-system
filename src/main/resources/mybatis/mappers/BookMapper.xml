<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--当我们传递一个 List 实例或者数组作为参数对象传给 MyBatis。当你这么做的时 候,MyBatis
会自动将它包装在一个 Map 中,用名称在作为键。List 实例将会以“list” 作为键,而数组实例将会以“array”作为键。
所以，当我们传递的是一个List集合时，mybatis会自动把我们的list集合包装成以list为Key值的map。
可以将list包装成map，其所在键名就是引用处，比如在foreach的collection引用。
若把list放入bean，或者有多个参数时，这时不能指定parameterType属性，而应该在接口mapper的方法参数上使用@Param注解。
-->
<mapper namespace="com.jing.librarymanagementsystem.mappers.BookMapper">
    <update id="updateBookInfo">
        update book_info
        <set>
            <if test="bookType!=null">
                book_type=#{bookType},
            </if>
            <if test="bookfaceName!=null">
                bookface_name=#{bookfaceName},
            </if>
            <if test="tag!=null">
                tag=#{tag}
            </if>
            where book_id=#{id}
        </set>

    </update>
    <!--    如果只搜索作者名下作品，bookName应为null，且-->
    <select id="selectBookBySearchStr" resultType="com.jing.librarymanagementsystem.bean.Book">
        select  book_id,book_name,book_author, book_type,clicks,word_count,finish,book_desc,is_borrowed,bookface_name from book_info
        <where>
            <if test="bo1.bookName!=null and bo1.bookAuthor!=null">
<!--                or须用（）括起来，否则它满足就会全满足-->
                (book_name like #{bo1.bookName} or book_author like #{bo1.bookAuthor})
            </if>
<!--            只根据作者名搜书，则不提供书籍名-->
            <if test="bo1.bookName==null and bo1.bookAuthor!=null">
                and  book_author like #{bo1.bookAuthor}
            </if>
            <if test="bo1.finish!=null">
                and finish like #{bo1.finish}
            </if>
            <if test="bo1.tag!=null">
                and tag like #{bo1.tag}
            </if>
            <if test="bo1.isBorrowed!=null">
                and is_borrowed  = #{bo1.isBorrowed}
            </if>
<!--            首字母搜索交给service-->
<!--            <if test="bo1.initial!=null">-->
<!--                and initial = #{bo1.initial}-->
<!--            </if>-->
            <!--            mybatis大于小于失效，替换：
原符号       <        <=      >       >=       &        '        "
替换符号    &lt;    &lt;=   &gt;    &gt;=   &amp;   &apos;  &quot;
注意：若mysql对varchar比较大小，word_count值不能为字符串，须+0转为int去比较。
-->
            <if test="bo1.minWordCount!=null">
<!--                比较两边时，不能左右两边同时比较，应拆分用and连接-->
                and word_count &gt;= #{bo1.minWordCount}+0 and word_count &lt;= #{bo1.maxWordCount}+0
            </if>
            <if test="bo1.bookType!=null">
                and book_type in
<!--                入参类型是java.util.Map而不再是List ,此时的collection属性值为Map中的Key值-->
                <foreach collection="bo1.bookType" item="name" index="index" open="(" close=")" separator=",">
                    #{name}
                </foreach>
            </if>
        </where>
<!--        为null可不按任何条件排序-->
        <if test="bo2!=null">
<!--            由于#会预编译，值会带上引号，而$又会发生sql注入风险，可以使用枚举搭配$-->
            order by ${bo2} desc
        </if>

    </select>

    <select id="selectAllBook" resultType="com.jing.librarymanagementsystem.bean.Book">
        select book_id,book_name,book_author,book_type,finish,book_desc,is_borrowed,bookface_name,tag from book_info
<!--        前端已经判断了至少要有一个条件-->
        <where>
            <if test="bookName!=null">
                book_name like #{bookName}
            </if>
            <if test="bookType!=null">
                and book_type like #{bookType}
            </if>
            <if test="bookAuthor!=null">
                and book_author like #{bookAuthor}
            </if>
        </where>
    </select>
    <delete id="deleteBook">
        delete from book_info where book_id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteBookType">
        delete from book_type where book_type_id in
        <foreach collection="list" item="type" index="index" open="(" close=")" separator=",">
            ${type}
        </foreach>
    </delete>
</mapper>